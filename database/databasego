


#####

package database

import (
    "library-management-api-jwt/config"
    "library-management-api-jwt/models"
    "gorm.io/gorm"
    "gorm.io/gorm/logger"
    "log"
    "time"
)

var DB *gorm.DB

func InitDatabase() {
    // Set up custom logger with timestamps and log level
    newLogger := logger.New(
        log.New(os.Stdout, "\r\n", log.LstdFlags), // Using the default log writer (stdout)
        logger.Config{
            SlowThreshold:             time.Second, // Slow SQL queries take longer than 1 second
            LogLevel:                  logger.Info, // Adjust log level: Info, Warn, Error, Silent
            IgnoreRecordNotFoundError: true,         // Ignore "record not found" errors
            Colorful:                  true,         // Enable colorized logs
        },
    )

    // Initialize DB connection with custom logger
    var err error
    DB, err = config.InitDB()
    if err != nil {
        log.Fatalf("Error initializing the database: %v", err)
    }

    // Set the logger to DB instance
    DB = DB.Session(&gorm.Session{Logger: newLogger})

    // Migrate the models
    err = DB.AutoMigrate(&models.User{}, &models.Book{}, &models.Author{}, &models.Borrow{})
    if err != nil {
        log.Fatalf("Error migrating database models: %v", err)
    }

    log.Println("Database successfully initialized and migrated.")
}



